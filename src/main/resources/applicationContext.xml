<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>
    
     <!-- 引入jdbc配置文件 -->
    <!-- 配置进行解密  -->
    <bean id="propertyConfigurer" class="com.smg.framework.common.plugin.EncryptPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- 主库数据源 -->
    <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!--         基本属性 url、user、password -->
        <property name="driverClassName" value="${master.jdbc.driver}" />  
        <property name="url" value="${master.jdbc.url}"/>
        <property name="username" value="${master.jdbc.username}"/>
        <property name="password" value="${master.jdbc.password}"/>
        <!--         配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${master.jdbc.initialSize}"/>
        <property name="minIdle" value="${master.jdbc.minIdle}"/>
        <property name="maxActive" value="${master.jdbc.maxActive}"/>
        <!--         配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${master.jdbc.maxWait}"/>
        <!--         配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${master.jdbc.timeBetweenEvictionRunsMillis}"/>
        <!--         配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${master.jdbc.minEvictableIdleTimeMillis}"/>
        <!--         校验语句 -->
        <property name="validationQuery" value="${master.jdbc.validationQuery}"/>
        <property name="testWhileIdle" value="${master.jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${master.jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${master.jdbc.testOnReturn}"/>
        <!--         配置监控统计拦截的filters -->
        <property name="filters" value="${master.jdbc.filters}"/>
        <property name="maxOpenPreparedStatements" value="${master.jdbc.maxOpenPreparedStatements}" />
    </bean>
    
    <!-- 动态数据源 -->
    <bean id="dataSource" class="com.smg.framework.common.db.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- 可配置多个数据源 -->
                <entry value-ref="masterDataSource" key="masterDataSource"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"></property>
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" abstract="false"
          lazy-init="false" autowire="default" dependency-check="default">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>
    
    <bean id="pageDAO"
          class="com.smg.framework.pagination.PageDaoImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate" />
        </property>
    </bean>
    
    <bean id="pageService"
          class="com.smg.framework.examples.pagination.PageService">
        <property name="pd">
            <ref bean="pageDAO" />
        </property>
         <property name="pageSize" value="5" />
    </bean>

</beans>
